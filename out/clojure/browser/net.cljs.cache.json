["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.browser.net","~:imports",["^ ","~$XhrIo","~$goog.net.XhrIo","~$EventType","~$goog.net.EventType","~$WebSocket","~$goog.net.WebSocket","~$CfgFields","~$goog.net.xpc.CfgFields","~$CrossPageChannel","~$goog.net.xpc.CrossPageChannel","~$Uri","~$goog.Uri"],"~:requires",["^ ","^B","^C","^<","^=","^:","^;","~$goog.json","^E","~$gobj","~$goog.object","^G","^G","^>","^?","~$gjson","^E","^8","^9","~$event","~$clojure.browser.event","^@","^A","^J","^J"],"~:cljs.spec/speced-vars",[],"~:shadow/js-access-global",["^4",["window","document","Error"]],"~:uses",null,"~:defs",["^ ","~$xpc-config-fields",["^ ","^5","~$clojure.browser.net/xpc-config-fields","~:file","out\\clojure\\browser\\net.cljs","~:line",74,"~:column",1,"~:end-line",74,"~:end-column",23,"~:meta",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",74,"^S",6,"^T",74,"^U",23],"~:tag","~$any"],"~$xhr-connection",["^ ","~:protocol-inline",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",82,"^S",7,"^T",82,"^U",21,"~:arglists",["~#list",["~$quote",["^10",[[]]]]],"~:doc","Returns an XhrIo connection"],"^5","~$clojure.browser.net/xhr-connection","~:variadic",false,"^Q","out\\clojure\\browser\\net.cljs","^U",21,"~:method-params",["^10",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^S",1,"^R",82,"^T",82,"~:max-fixed-arity",0,"~:fn-var",true,"^[",["^10",["^11",["^10",[[]]]]],"^12","Returns an XhrIo connection"],"~$xpc-connection",["^ ","^Z",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",117,"^S",7,"^T",117,"^U",21,"^[",["^10",["^11",["^10",[[],["~$config"]]]]],"^12","When passed with a config hash-map, returns a parent\n  CrossPageChannel object. Keys in the config hash map are downcased\n  versions of the goog.net.xpc.CfgFields enum keys,\n  e.g. goog.net.xpc.CfgFields.PEER_URI becomes :peer_uri in the config\n  hash.\n\n  When passed with no args, creates a child CrossPageChannel object,\n  and the config is automatically taken from the URL param 'xpc', as\n  per the CrossPageChannel API.","~:top-fn",["^ ","^14",false,"^18",1,"^15",["^10",[[],["^1;"]]],"^[",["^10",[[],["^1;"]]],"^17",["^10",[null,null]]]],"^5","~$clojure.browser.net/xpc-connection","^14",false,"^Q","out\\clojure\\browser\\net.cljs","^U",21,"^1<",["^ ","^14",false,"^18",1,"^15",["^10",[[],["^1;"]]],"^[",["^10",[[],["^1;"]]],"^17",["^10",[null,null]]],"^15",["^10",[[],["^1;"]]],"^16",null,"^17",["^10",[null,null]],"^S",1,"^R",117,"^T",117,"^18",1,"^19",true,"^[",["^10",[[],["^1;"]]],"^12","When passed with a config hash-map, returns a parent\n  CrossPageChannel object. Keys in the config hash map are downcased\n  versions of the goog.net.xpc.CfgFields enum keys,\n  e.g. goog.net.xpc.CfgFields.PEER_URI becomes :peer_uri in the config\n  hash.\n\n  When passed with no args, creates a child CrossPageChannel object,\n  and the config is automatically taken from the URL param 'xpc', as\n  per the CrossPageChannel API."],"~$ICrossPageChannel",["^ ","^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",87,"^S",14,"^T",87,"^U",31,"^12",null,"~:protocol-symbol",true,"~:jsdoc",["^10",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$register-service",[["~$this","~$service-name","~$fn"],["^1D","^1E","^1F","~$encode-json?"]]]]],"^1?",true,"^5","~$clojure.browser.net/ICrossPageChannel","^Q","out\\clojure\\browser\\net.cljs","^U",31,"^S",1,"^R",87,"^1A",["^ ","^1B",["^ ","^1C",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]]],"~:info",null,"^T",87,"^W","^X","~:impls",["^4",["~$goog/net.xpc.CrossPageChannel"]],"^12",null,"^1@",["^10",["@interface"]]],"~$IWebSocket",["^ ","^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",144,"^S",14,"^T",144,"^U",24,"^12",null,"^1?",true,"^1@",["^10",["@interface"]],"^1A",["^ ","^1B",["^ ","~$open?",[["^1D"]]]]],"^1?",true,"^5","~$clojure.browser.net/IWebSocket","^Q","out\\clojure\\browser\\net.cljs","^U",24,"^S",1,"^R",144,"^1A",["^ ","^1B",["^ ","^1M",[["^1D"]]]],"^1I",null,"^T",144,"^W","^X","^1J",["^4",["~$goog/net.WebSocket"]],"^12",null,"^1@",["^10",["@interface"]]],"~$*timeout*",["^ ","^5","~$clojure.browser.net/*timeout*","^Q","out\\clojure\\browser\\net.cljs","^R",20,"^S",1,"^T",20,"^U",15,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",20,"^S",6,"^T",20,"^U",15],"^W","~$number"],"~$connect",["^ ","^Z",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",32,"^S",4,"^T",32,"^U",11,"~:protocol","~$clojure.browser.net/IConnection","^12",null,"^[",["^10",["^11",["^10",[["^1D"],["^1D","~$opt1"],["^1D","^1V","~$opt2"],["^1D","^1V","^1W","~$opt3"]]]]],"^1<",["^ ","^14",false,"^18",4,"^15",["^10",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]]],"^[",["^10",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]]],"^17",["^10",[null,null,null,null]]]],"^1T","^1U","^5","~$clojure.browser.net/connect","^14",false,"^Q","out\\clojure\\browser\\net.cljs","^U",11,"^1<",["^ ","^14",false,"^18",4,"^15",["^10",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]]],"^[",["^10",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]]],"^17",["^10",[null,null,null,null]]],"^15",["^10",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]]],"^16",null,"^17",["^10",[null,null,null,null]],"^S",1,"^R",31,"^T",32,"^18",4,"^19",true,"^[",["^10",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]]],"^12",null],"~$event-types",["^ ","^5","~$clojure.browser.net/event-types","^Q","out\\clojure\\browser\\net.cljs","^R",22,"^S",1,"^T",22,"^U",17,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",22,"^S",6,"^T",22,"^U",17],"^W","^X"],"~$websocket-connection",["^ ","^Z",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",175,"^S",7,"^T",175,"^U",27,"^[",["^10",["^11",["^10",[[],["~$auto-reconnect?"],["^21","~$next-reconnect-fn"]]]]],"^1<",["^ ","^14",false,"^18",2,"^15",["^10",[[],["^21"],["^21","^22"]]],"^[",["^10",[[],["^21"],["^21","^22"]]],"^17",["^10",[null,null,null]]]],"^5","~$clojure.browser.net/websocket-connection","^14",false,"^Q","out\\clojure\\browser\\net.cljs","^U",27,"^1<",["^ ","^14",false,"^18",2,"^15",["^10",[[],["^21"],["^21","^22"]]],"^[",["^10",[[],["^21"],["^21","^22"]]],"^17",["^10",[null,null,null]]],"^15",["^10",[[],["^21"],["^21","^22"]]],"^16",null,"^17",["^10",[null,null,null]],"^S",1,"^R",175,"^T",175,"^18",2,"^19",true,"^[",["^10",[[],["^21"],["^21","^22"]]]],"~$close",["^ ","^Z",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",43,"^S",4,"^T",43,"^U",9,"^1T","^1U","^12",null,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^1T","^1U","^5","~$clojure.browser.net/close","^14",false,"^Q","out\\clojure\\browser\\net.cljs","^U",9,"^15",["^10",[["^1D"]]],"^16",null,"^17",["^10",[null,null]],"^S",1,"^R",31,"^T",43,"^18",1,"^19",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^12",null],"^1C",["^ ","^Z",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",88,"^S",4,"^T",88,"^U",20,"^1T","^1H","^12",null,"^[",["^10",["^11",["^10",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]]]],"^1<",["^ ","^14",false,"^18",4,"^15",["^10",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]],"^[",["^10",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]],"^17",["^10",[null,null]]]],"^1T","^1H","^5","~$clojure.browser.net/register-service","^14",false,"^Q","out\\clojure\\browser\\net.cljs","^U",20,"^1<",["^ ","^14",false,"^18",4,"^15",["^10",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]],"^[",["^10",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]],"^17",["^10",[null,null]]],"^15",["^10",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]],"^16",null,"^17",["^10",[null,null]],"^S",1,"^R",87,"^T",88,"^18",4,"^19",true,"^[",["^10",[["^1D","^1E","^1F"],["^1D","^1E","^1F","^1G"]]],"^12",null],"~$IConnection",["^ ","^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",31,"^S",14,"^T",31,"^U",25,"^12",null,"^1?",true,"^1@",["^10",["@interface"]],"^1A",["^ ","^1B",["^ ","^1S",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]],"~$transmit",[["^1D","~$opt"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","~$opt4"],["^1D","^29","^1W","^1X","^2:","~$opt5"]],"^24",[["^1D"]]]]],"^1?",true,"^5","^1U","^Q","out\\clojure\\browser\\net.cljs","^U",25,"^S",1,"^R",31,"^1A",["^ ","^1B",["^ ","^1S",[["^1D"],["^1D","^1V"],["^1D","^1V","^1W"],["^1D","^1V","^1W","^1X"]],"^28",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]],"^24",[["^1D"]]]],"^1I",null,"^T",31,"^W","^X","^1J",["^4",["^1K","^1O","~$goog/net.XhrIo"]],"^12",null,"^1@",["^10",["@interface"]]],"^1M",["^ ","^Z",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",145,"^S",4,"^T",145,"^U",9,"^1T","^1N","^12",null,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^1T","^1N","^5","~$clojure.browser.net/open?","^14",false,"^Q","out\\clojure\\browser\\net.cljs","^U",9,"^15",["^10",[["^1D"]]],"^16",null,"^17",["^10",[null,null]],"^S",1,"^R",144,"^T",145,"^18",1,"^19",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^12",null],"^28",["^ ","^Z",null,"^V",["^ ","^Q","F:\\cljs\\nastok\\out\\clojure\\browser\\net.cljs","^R",37,"^S",4,"^T",37,"^U",12,"^1T","^1U","^12",null,"^[",["^10",["^11",["^10",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]]]]],"^1<",["^ ","^14",false,"^18",6,"^15",["^10",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]]],"^[",["^10",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]]],"^17",["^10",[null,null,null,null,null]]]],"^1T","^1U","^5","~$clojure.browser.net/transmit","^14",false,"^Q","out\\clojure\\browser\\net.cljs","^U",12,"^1<",["^ ","^14",false,"^18",6,"^15",["^10",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]]],"^[",["^10",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]]],"^17",["^10",[null,null,null,null,null]]],"^15",["^10",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]]],"^16",null,"^17",["^10",[null,null,null,null,null]],"^S",1,"^R",31,"^T",37,"^18",6,"^19",true,"^[",["^10",[["^1D","^29"],["^1D","^29","^1W"],["^1D","^29","^1W","^1X"],["^1D","^29","^1W","^1X","^2:"],["^1D","^29","^1W","^1X","^2:","^2;"]]],"^12",null]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^12","Network communication library, wrapping goog.net.\nIncludes a common API over XhrIo, CrossPageChannel, and Websockets."]